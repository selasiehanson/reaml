module Reaml =
  struct
    type undefined
    type vnode
    let undefined : undefined = Obj.magic ()
    let useState _ _ = Obj.magic ()
    let useReducer _ _ _ = Obj.magic ()
    let component _ _ = Obj.magic ()
    let recursiveComponent _ _ = Obj.magic ()
    let createComponentElement _ _ = Obj.magic ()
  end
type props = {
  foo: int }
external _foo : props -> Reaml.vnode = "foo"[@@bs.val ]
let _foo props = Reaml.createComponentElement _foo props
let _foo =
  let rec __foo () =
    Js.log "foo";
    (let (_count, _setCount) = Reaml.useState () Reaml.undefined in ())
  and _foo props = Reaml.createFunctionComponentElement __foo props in _foo
let _foo =
  let rec __foo () =
    Js.log "foo";
    (let (_count, _setCount) = Reaml.useState () Reaml.undefined in ())
  and _foo props = Reaml.createFunctionComponentElement __foo props in _foo
let useThing _ (_ : Reaml.undefined) =
  let (count, _setCount) = Reaml.useState () Reaml.undefined in
  let () = Js.log "in useThing!" in
  let (value, _dispatch) = Reaml.useReducer () () Reaml.undefined in
  (count, value)
type foo = {
  foo: string }
let _foo =
  let rec __foo { foo = _ } =
    let (_count, _setCount) = Reaml.useState () Reaml.undefined in
    let (_value, _dispatch) = Reaml.useReducer () () Reaml.undefined in
    let (_, _) = useThing () Reaml.undefined in _foo { foo = "foo" }
  and _foo props = Reaml.createFunctionComponentElement __foo props in _foo
let _foo =
  let rec __foo { foo = _ } =
    let (_count, _setCount) = Reaml.useState () Reaml.undefined in
    let (_value, _dispatch) = Reaml.useReducer () () Reaml.undefined in
    let (_, _) = useThing () Reaml.undefined in _foo { foo = "foo" }
  and _foo props = Reaml.createFunctionComponentElement __foo props in _foo
let _foo =
  let rec __foo () =
    let (_count, _setCount) = Reaml.useState () Reaml.undefined in
    let (_value, _dispatch) = Reaml.useReducer () () Reaml.undefined in
    let (_, _) = useThing () Reaml.undefined in ()
  and _foo props = Reaml.createFunctionComponentElement __foo props in _foo
module Counter =
  struct
    type props = {
      initial: int }
    external make : props -> Reaml.vnode = "Counter"[@@bs.module
                                                      "./Interop.js"]
    let make props = Reaml.createComponentElement make props
  end
